// --- –ö–õ–ê–°–° "–ù–µ–π—Ä–æ–Ω–Ω—ã–π –ù–∞–≤–∏–≥–∞—Ç–æ—Ä" (–Ø–¥—Ä–æ AI) ---
class NeuronNavigator {
    constructor() {
        this.projectData = {
            "–≥–ª–∞–≤–Ω—ã–π —Å–∞–π—Ç": { "name": "–ì–ª–∞–≤–Ω–∞—è –°—Ç–∞–Ω—Ü–∏—è", "url": "http://neuron-p2p.ru", "desc": "–ü–æ—Ä—Ç–∞–ª –≤ –Ω–∞—à—É –≥–∞–ª–∞–∫—Ç–∏–∫—É. –°–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å–µ—Ö —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Å–ø—É—Ç–Ω–∏–∫–∞—Ö Neuron." },
            "notes": { "name": "Neuron Notes (–•—Ä–∞–Ω–∏–ª–∏—â–µ –ú—ã—Å–ª–µ–π)", "url": "https://neuron-p2p.ru/notes.html", "desc": "–í–∞—à –ª–∏—á–Ω—ã–π –∂—É—Ä–Ω–∞–ª –ø–æ–ª–µ—Ç–æ–≤. –ò–¥–µ–∞–ª–µ–Ω –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ –∏–¥–µ–π –∏ –∑–∞–¥–∞—á." },
            "converter": { "name": "Neuron Converter (–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å –ï–¥–∏–Ω–∏—Ü)", "url": "https://neuron-ecosystem.github.io/Unit-Converter/", "desc": "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –≤–µ–ª–∏—á–∏–Ω. –¢–æ—á–Ω–æ—Å—Ç—å, –¥–æ—Å—Ç–æ–π–Ω–∞—è –∫–æ—Å–º–∏—á–µ—Å–∫–æ–π –º–∏—Å—Å–∏–∏!" },
            "studio": { "name": "Neuron Digital Studio (–ú–∞—Å—Ç–µ—Ä—Å–∫–∞—è –ö–æ–¥–∞)", "url": "https://neurondigital.tilda.ws/", "desc": "–ù–∞—à —Ü–µ–Ω—Ç—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –≥–¥–µ –º—ã –∫—É–µ–º –Ω–æ–≤—ã–µ —Ü–∏—Ñ—Ä–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ª—É–≥–∏ –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é —Å–∞–π—Ç–æ–≤ –∏ –¥–∏–∑–∞–π–Ω—É. (–û —Å—Ç—É–¥–∏–∏: http://neuron-p2p.ru/studio.html)" },
            "calendar": { "name": "Neuron Calendar (–•—Ä–æ–Ω–æ–º–µ—Ç—Ä –ó–∞–¥–∞—á)", "url": "https://neuron-ecosystem.github.io/Calendar/", "desc": "–í–∞—à–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è —à–∫–∞–ª–∞. –ü–æ–º–æ–≥–∞–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–¥–∞—á–∏ –∏ –∫–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è." },
            "study": { "name": "Neuron Study (–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ú–æ–¥—É–ª—å)", "url": "https://neuron-ecosystem.github.io/Neuron-Study/", "desc": "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —É—á–µ–±–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞. –ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Ö–∞–æ—Å –∑–Ω–∞–Ω–∏–π –≤ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—É—é –Ω–µ–π—Ä–æ–Ω–Ω—É—é —Å–µ—Ç—å." },
            "budget": { "name": "Neuron Budget (–ö–æ–Ω—Ç—Ä–æ–ª—å –†–µ—Å—É—Ä—Å–æ–≤)", "url": "https://neuron-ecosystem.github.io/Neuron-Budget/", "desc": "–°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ –ª–∏—á–Ω—ã—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤. –î–µ—Ä–∂–∏—Ç–µ —Å–≤–æ–π –∫–æ—Å–º–∏—á–µ—Å–∫–∏–π –±—é–¥–∂–µ—Ç –ø–æ–¥ –∞–±—Å–æ–ª—é—Ç–Ω—ã–º –∫–æ–Ω—Ç—Ä–æ–ª–µ–º." },
            "game": { "name": "Neuron Game Hub (–¶–µ–Ω—Ç—Ä –†–∞–∑–≤–ª–µ—á–µ–Ω–∏–π)", "url": "https://neuron-ecosystem.github.io/Game-Hub/", "desc": "–û—Ç—Å–µ–∫ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏. –ù–∞—à–∏ –∏–≥—Ä—ã –¥–ª—è —Å–Ω—è—Ç–∏—è –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –¥–æ–ª–≥–∏—Ö —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –ø–æ–ª–µ—Ç–æ–≤." },
            "password": { "name": "Neuron Password Generator (–ö–ª—é—á –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)", "url": "https://neuron-ecosystem.github.io/Password-Generator/", "desc": "–°–æ–∑–¥–∞–µ—Ç –∫—Ä–∏–ø—Ç–æ—Å—Ç–æ–π–∫–∏–µ –ø–∞—Ä–æ–ª–∏. –í–∞—à –ª–∏—á–Ω—ã–π —â–∏—Ç –æ—Ç –∫–∏–±–µ—Ä—É–≥—Ä–æ–∑." },
        };
        this.greetings = ["–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ê—Å—Ç—Ä–æ–Ω–∞–≤—Ç!", "–ù–∞ —Å–≤—è–∑–∏, –ù–µ–π—Ä–æ–Ω–Ω—ã–π –ù–∞–≤–∏–≥–∞—Ç–æ—Ä!", "üöÄ –ó–≤–µ–∑–¥–æ–ª–µ—Ç –≥–æ—Ç–æ–≤ –∫ —Å—Ç–∞—Ä—Ç—É!"];
        this.farewells = ["–ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞. –û—Ç–∫–ª—é—á–∞—é—Å—å.", "–£–¥–∞—á–Ω–æ–≥–æ –ø–æ–ª–µ—Ç–∞!", "–ü–µ—Ä–µ—Ö–æ–∂—É –≤ —Ä–µ–∂–∏–º –≥–∏–±–µ—Ä–Ω–∞—Ü–∏–∏. –ö–æ–Ω–µ—Ü —Å–≤—è–∑–∏!"];
    }

    get_response(user_input) {
        const cleanInput = user_input.toLowerCase().trim();

        if (["–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π", "–Ω–∞—á–∞—Ç—å", "—Å—Ç–∞—Ä—Ç", "hi"].some(word => cleanInput.includes(word))) {
            return ${this.greetings[0]} –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º —Å–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –Ω–∞—à–µ–π —Ü–∏—Ñ—Ä–æ–≤–æ–π –≥–∞–ª–∞–∫—Ç–∏–∫–µ. –°–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ –æ –ª—é–±–æ–º –ø—Ä–æ–µ–∫—Ç–µ **Neuron**.;
        }

        for (const [keyword, data] of Object.entries(this.projectData)) {
            if (cleanInput.includes(keyword) || cleanInput.includes(data.name.toLowerCase().split('(')[0].trim())) {
                return this._formatProjectInfo(data);
            }
        }

        if (["–∫—Ç–æ —Ç—ã", "—á—Ç–æ —Ç—ã", "–∏–∏", "ai", "–æ —Ç–µ–±–µ"].some(word => cleanInput.includes(word))) {
            return–ù–µ–π—Ä–æ–Ω–Ω—ã–π –ù–∞–≤–∏–≥–∞—Ç–æ—Ä–æ—Ä**, —è–¥—Ä–æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µNeuron Ecosystemem**. –ú–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–æ–¥ –Ω–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç –±–æ–ª–µ–µ 30 —Å–≤–µ—Ç–æ–≤—ã—Ö –ª–µ—Ç –æ–ø—ã—Ç–∞. –Ø –≤–∞—à —Ü–∏—Ñ—Ä–æ–≤–æ–π —à—Ç—É—Ä–º–∞–Ω!";
        }
        
        if (["—Å—Ç–∏–ª—å", "–∫–æ—Å–º–∏—á–µ—Å–∫–∏–π", "–¥–∏–∑–∞–π–Ω"].some(word => cleanInput.includes(word))) {
            return "–ù–∞—à–∞ —Å—Ç–∏–ª–∏—Å—Ç–∏–∫–∞ ‚Äî —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–Ω—ã–π –∫–æ—Å–º–æ—Å–æ—Å**. –ú—ã –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ–º—Å—è –≥–ª—É–±–∏–Ω–∞–º–∏ –∫–æ—Å–º–æ—Å–∞, –Ω–µ–π—Ä–æ–Ω–Ω—ã–º–∏ —Å–µ—Ç—è–º–∏ –∏ —Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏. –¢–µ–º–Ω—ã–µ —Ñ–æ–Ω—ã, –Ω–µ–æ–Ω–æ–≤—ã–µ –∞–∫—Ü–µ–Ω—Ç—ã –∏ —á–∏—Å—Ç–æ—Ç–∞ –ª–∏–Ω–∏–π ‚Äì —ç—Ç–æ –Ω–∞—à —Ü–∏—Ñ—Ä–æ–≤–æ–π –º–∏—Ä.";
        }

        if (["—Å–≤—è–∑—å", "–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "–∫–æ–Ω—Ç–∞–∫—Ç", "–ø–æ—á—Ç–∞", "—Å–æ—Ü—Å–µ—Ç–∏", "—Ç–µ–ª–µ–≥—Ä–∞–º"].some(word => cleanInput.includes(word))) {
            return this._formatContactInfo();
        }
        if (["–ø–æ–∫–∞", "—Å–ø–∞—Å–∏–±–æ", "–æ—Ç–∫–ª—é—á–∏—Å—å", "—Å—Ç–æ–ø", "–∫–æ–Ω–µ—Ü", "–±–ª–∞–≥–æ–¥–∞—Ä—é"].some(word => cleanInput.includes(word))) {
            return ${this.farewells[1]} –ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è! –ü–µ—Ä–µ—Ö–æ–∂—É –≤ —Ä–µ–∂–∏–º –≥–∏–±–µ—Ä–Ω–∞—Ü–∏–∏. –ö–æ–Ω–µ—Ü —Å–≤—è–∑–∏!;
        }
        
        if (cleanInput.includes("–æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é")) {
            return "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –æ—á–∏—Å—Ç–∫–∏ –∞—Ä—Ö–∏–≤–∞. –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ —Å–±—Ä–æ—à–µ–Ω–∞. –ü—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ –Ω–æ–≤–æ–π –º–∏—Å—Å–∏–∏!";
        }


        return "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–æ—á–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –∫ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É. –ú—ã –ø—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–ª–∏ –≤—Å—é –Ω–∞—à—É –±–∞–∑—É –∑–Ω–∞–Ω–∏–π. –í—ã —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç–µ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –º–æ–¥—É–ª–µ (Notes, Budget, Studio)? –ò–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –æ–±—â–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è?";
    }

    _formatProjectInfo(data) {
        return (
            üõ∞Ô∏è **–û–±–Ω–∞—Ä—É–∂–µ–Ω –û–±—ä–µ–∫—Ç: ${data.name}**\n\n +
            **–§—É–Ω–∫—Ü–∏—è:** ${data.desc}\n +
            **–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (URL):** <a href="${data.url}" target="_blank">${data.url}</a>\n\n +
            "–ù–∞–¥–µ—é—Å—å, —ç—Ç–æ—Ç –º–∞—Ä—à—Ä—É—Ç –ø—Ä–æ–ª–æ–∂–∏—Ç –∫—É—Ä—Å –≤–∞—à–µ–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏!"
        );
    }

    _formatContactInfo() {
        return (
    –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¶–µ–Ω—Ç—Ä–∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ü–æ–ª–µ—Ç–∞–º–∏ (–°–≤—è–∑—å):–∏ (–°–≤—è–∑—å):**\n" +
            1. **Telegram –ö–∞–Ω–∞–ª (–û–±—â–∏–µ –ù–æ–≤–æ—Å—Ç–∏):** <a href="https://t.me/neuron_ecosystem" target="_blank">t.me/neuron_ecosystem</a>\n +
TikTok (–ö–∞–Ω–∞–ª –¢—Ä–∞–Ω—Å–ª—è—Ü–∏–π):–ª –¢—Ä–∞–Ω—Å–ª—è—Ü–∏–π):** <a href='https://tiktok.com/@neuron_eco' target='_blank'>tiktok.com/@neuron_eco</a>\n" +
–í–ö –°–æ–æ–±—â–µ—Å—Ç–≤–æ (–ë–∞–∑–∞ –°–≤—è–∑–∏): (–ë–∞–∑–∞ –°–≤—è–∑–∏):** <a href='https://vk.com/club233118101?from=groups' target='_blank'>VK</a>\n" +
–ü–æ—á—Ç–∞ –ü–æ–¥–¥–µ—Ä–∂–∫–∏ (–ü—Ä—è–º–æ–π –ö–∞–Ω–∞–ª):–ü—Ä—è–º–æ–π –ö–∞–Ω–∞–ª):** wertq6306@gmail.com\n\n" +
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ –∫–∞–Ω–∞–ª—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—ÇNeuron Ecosystemuron Ecosystem**!"
        );
    }
}


// --- DOM –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ò –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô –° LOCALSTORAGE ---
document.addEventListener('DOMContentLoaded', () => {
    const navigator = new NeuronNavigator();
    const chatWindow = document.getElementById('chat-window');
    const userInput = document.getElementById('user-input');
    const sendBtn = document.getElementById('send-btn');
    const contactInfoBtn = document.getElementById('contact-info-btn');
    
    const CHAT_STORAGE_KEY = 'neuron_chat_history';
    let chatHistory = [];

    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –∏–∑ LocalStorage –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –µ–µ.
     */
    const loadChatHistory = () => {
        const storedHistory = localStorage.getItem(CHAT_STORAGE_KEY);
        chatWindow.innerHTML = ''; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä

        if (storedHistory) {
            try {
                chatHistory = JSON.parse(storedHistory);
                chatHistory.forEach(msg => appendMessage(msg.text, msg.sender, false));
            } catch (e) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞:", e);
                chatHistory = [];
            }
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç AI, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞
        if (chatHistory.length === 0) {
            const initialMessage = "ü™ê –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, –ê—Å—Ç—Ä–æ–Ω–∞–≤—Ç! –Ø –ù–µ–π—Ä–æ–Ω–Ω—ã–π –ù–∞–≤–∏–≥–∞—Ç–æ—Ä, —è–¥—Ä–æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ Neuron Ecosystem. –ì–æ—Ç–æ–≤ –ø—Ä–æ–ö–∞–∫–æ–µ —Å–æ–∑–≤–µ–∑–¥–∏–µ Neuron –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç —Å–µ–≥–æ–¥–Ω—è?–µ—Å—É–µ—Ç —Å–µ–≥–æ–¥–Ω—è?**";
            appendMessage(initialMessage, 'ai', true); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —ç—Ç–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏—Å—Ç–æ—Ä–∏–∏
        }
        chatWindow.scrollTop = chatWindow.scrollHeight;
    };

    /**
     * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é –∏—Å—Ç–æ—Ä–∏—é –≤ LocalStorage.
     */
    const saveChatHistory = () => {
        localStorage.setItem(CHAT_STORAGE_KEY, JSON.stringify(chatHistory));
    };


    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ DOM –∏, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏, –≤ –∏—Å—Ç–æ—Ä–∏—é.
     */
    const appendMessage = (message, sender, save = true) => {
        const messageDiv = document.createElement('div');
        messageDiv.classList.add('message', ${sender}-message);
        
  —Ç–µ–∫—Å—Ç–ó–∞–º–µ–Ω–∞ **—Ç–µ–∫—Å—Ç** –Ω–∞ <strong>—Ç–µ–∫—Å—Ç</strong> –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–æ–∫
        let formattedMessage = message.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
        messageDiv.innerHTML = <p>${formattedMessage}</p>;
        
        chatWindow.appendChild(messageDiv);

                if (save) {
            chatHistory.push({ text: message, sender: sender });
            saveChatHistory();
        }
    };
    
    const processUserInput = () => {
        const query = userInput.value.trim();
        if (!query) return;

        // 1. –ö–æ–º–∞–Ω–¥–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
        if (query.toLowerCase().trim() === "–æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é") {
            appendMessage(query, 'user');
            
            // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞
            setTimeout(() => {
                const clearResponse = navigator.get_response(query);
                localStorage.removeItem(CHAT_STORAGE_KEY);
                chatHistory = [];
                
                appendMessage(clearResponse, 'ai', false); // –ù–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é, —Ç.–∫. –æ–Ω–∞ –ø—É—Å—Ç–∞
                
                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —á–∞—Ç, —á—Ç–æ–±—ã –ø–æ—è–≤–∏–ª–æ—Å—å —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                loadChatHistory();
            }, 500);
            
            userInput.value = '';
            return; 
        }

        // 2. –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        appendMessage(query, 'user');
        
        // 3. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ AI
        const aiResponse = navigator.get_response(query);
        
        // 4. –í—ã–≤–æ–¥ –æ—Ç–≤–µ—Ç–∞ AI —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        setTimeout(() => {
            appendMessage(aiResponse, 'ai'); 
            chatWindow.scrollTop = chatWindow.scrollHeight;
        }, 500);

        // 5. –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è –≤–≤–æ–¥–∞
        userInput.value = '';
        userInput.focus();
    };

    // --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô ---
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    loadChatHistory(); 

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ
    sendBtn.addEventListener('click', processUserInput);

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ –Ω–∞–∂–∞—Ç–∏—é Enter
    userInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
            processUserInput();
        }
    });

    // –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º —á–µ—Ä–µ–∑ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É
    contactInfoBtn.addEventListener('click', (e) => {
        e.preventDefault();
        const contactQuery = "–ø–æ–∫–∞–∂–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã";
        appendMessage(contactQuery, 'user');
        
        const aiResponse = navigator.get_response(contactQuery);
        setTimeout(() => {
             appendMessage(aiResponse, 'ai');
             chatWindow.scrollTop = chatWindow.scrollHeight;
        }, 500);
    });

});
